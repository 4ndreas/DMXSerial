# This is a basic workflow to help you get started with Actions for Arduino library projects

name: Arduino Library Checks

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [develop,master]
  pull_request:
    branches: [develop,master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "checks"
  checks:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Arduino - lint
      - name: Arduino-lint
        uses: arduino/arduino-lint-action@v1
        with:
          library-manager: update
          verbose: false

      # Compile Examples for UNO
      - name: Compile examples for UNO
        uses: arduino/compile-sketches@v1
        with:
          verbose: true
          fqbn: 'arduino:avr:uno'
          sketch-paths: |
            - 'examples/DMXSerialFlow'
            - 'examples/DmxSerialNeoPixels'
            - 'examples/DmxSerialRecv'
            - 'examples/DmxSerialSend'
            # - 'examples/DmxSniff'

      # Compile Examples for Leonardo
      # - name: Compile examples for Leonardo
      #   uses: arduino/compile-sketches@v1
      #   with:
      #     verbose: true
      #     fqbn: 'arduino:avr:leonardo'
      #     sketch-paths: |
      #       - 'examples/DMXSerialFlow'
      #       - 'examples/DmxSerialNeoPixels'
      #       - 'examples/DmxSerialRecv'
      #       - 'examples/DmxSerialSend'
      #       - 'examples/DmxSniff'
